openapi: 3.0.3
info:
  title: webmarket OpenAPI 3.0
  version: 1.0.11
tags:
  - name: utente
    description: utente

#1 login 

#SELECT id 
#FROM users 
#WHERE email = ? AND password = ?;


paths:
  /utente/login:
    get:
      tags:
        - utente
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          
  /utente/logout:
    get:
      tags:
        - utente
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
          
#7 Estrazione lista delle richiesta di acquisto in corso (non chiuse) di un determinato ordinante

#SELECT * FROM `richiesta_acquisto` WHERE stato_richiesta!=('concluso') AND id_ordinante = ?;


  /utente/{id}/richiesteAttive:
    get:
      summary: estrae le richieste di acquisto non chiuse di un ordinante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      tags:
        - utente 
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: operazione non valida
          
          
#10 Estrazione lista richiesta di acquisto gestite da un determinato tecnico

#SELECT * FROM `richiesta_acquisto` WHERE id_tecnico=?;
          
  /tecnico/{id}/richiesteAssegnate:
    get:
      summary: estrae le richieste di acquisto assegnate ad un tecnico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      tags:
        - utente 
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: operazione non valida
          
#4 Inserimento e modifica (da parte del tecnico incaricato) di una proposta di acquisto associata a una richiesta


  /tecnico/{id}/richiesta/{id}:
    post:
      summary: inserisce una nuova proposta di acquisto associata ad una richiesta
      tags:
        - utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                proposta_acquisto:
                  $ref: '#/components/schemas/Proposta_acquisto'
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
          
  /tecnico/{id}/richiesta/{id}/proposta/{id}:
    put:
      summary: modifica una proposta di acquisto associata ad una richiesta
      tags:
        - utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                proposta_acquisto:
                  $ref: '#/components/schemas/Proposta_acquisto'
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
          
          
#5 Approvazione (da parte dell'ordinante) di una proposta di acquisto


  /utente/{id}/richiesta/{id}/proposta/{id}:
    post:
      summary: accetta una proposta di acquisto
      tags:
        - utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
        
          
#2 Inserimento di una richiesta di acquisto (comprensiva di categoria di prodotto, di tutte le caratteristiche richiesta per quel tipo di prodotto e delle eventuali note)

  /richiesta:
    post:
      tags:
        - richiesta_acquisto
      summary: inserisce una nuova richiesta di acquisto
      description: inserisce una nuova richiesta di acquisto
      operationId: addRichiesta
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                richiesta_acquisto:
                  $ref: '#/components/schemas/Richiesta_acquisto'
                caratteristiche:
                  type: array
                  items:
                    $ref: '#/components/schemas/Richiesta_Caratteristica'
                
        required: true
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
  
#8 Estrazione lista delle richiesta di acquisto non ancora assegnate ad alcun tecnico

#SELECT * FROM `richiesta_acquisto` WHERE id_tecnico IS NULL;

  /richieste:
    get:
      tags:
        - richiesta_acquisto
      summary: estrae la lista delle richieste non assegnate ad alcun tecnico
      operationId: getrichiesta
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: operazione non valida
      
        


  /richiesta/{id}:
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      tags:
        - richiesta_acquisto
      summary: modifica una richiesta di acquisto (può essere usato per assegnarla ad un tecnico)
      description: modifica una richiesta di acquisto (può essere usato per assegnarla ad un tecnico)
      operationId: updateRichiesta
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                richiesta_acquisto:
                  $ref: '#/components/schemas/Richiesta_acquisto'
                caratteristiche:
                  type: array
                  items:
                    $ref: '#/components/schemas/Richiesta_Caratteristica'
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
          
          
    
#9 Estrazione di tutti i dettagli di una richiesta di acquisto (richiesta iniziale, eventuale prodotto   candidato, approvazione/rifiuto dell'ordinante con relativa motivazione)


    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      tags:
        - richiesta_acquisto
      summary: estrae i dettagli di una richiesta
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  richiesta: 
                    $ref: '#/components/schemas/Richiesta_acquisto'   
                  caratteristiche:
                    type: array
                    items:
                      $ref: '#/components/schemas/Richiesta_Caratteristica' 
                  proposta:
                    $ref: '#/components/schemas/Proposta_acquisto' 
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
          
#6 Eliminazione di una richiesta di acquisto dal sistema          

    delete:
      tags:
        - richiesta_acquisto
      summary: cancella una richiesta
      operationId: deleteRichiesta
      parameters:
        - name: id
          in: path
          required: true
          schema: 
            type: integer
      responses:
        '200':
          description: operazione eseguita con successo
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione
          
      
#3 Associazione di una richiesta di acquisto a un tecnico incaricato    



  /richiesta/{id}/assegna:
    post:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: idTecnico
          in: cookie
          required: true
          schema:
            type: integer
      tags:
        - richiesta_acquisto
      summary: assegna una richiesta ad un tecnico
      description: assegna una richiesta ad un tecnico
      operationId: assegnaRichiesta
      responses:
        '200':
          description: operazione eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Richiesta_acquisto'          
        '400':
          description: input invalido
        '422':
          description: eccezione di validazione     

          
components:
  schemas:
    Utente:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        cognome:
          type: string
        email:
          type: string
        password:
          type: string
        ruolo:
          type: string
          enum:
            - admin
            - utente
            - tecnico
  
    Caratteristica:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descrizione:
          type: string
        id_categoria:
          type: integer
          description: Foreign key a categoria
    Categoria:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
          enum:
            - pc
            - pc portatile
            - pc fisso
            - monitor
        descrizione:
          type: string
        id_categoriaPadre:
          type: integer
          description: foreign key a sè stesso
    Proposta_acquisto:
      type: object
      properties:
        id:
          type: integer
        id_richiesta_acquisto:
          type: integer
          description: foreign key a richiesta acquisto
        nome_produttore:
          type: string
        nome_prodotto:
          type: string
        codice prodotto:
          type: string
        prezzo:
          type: number
        url:
          type: string
        note:
          type: string
        stato_proposta:
          type: string
          enum:
            - in attesa
            - respinto
            - approvato
            - ordinato
            - terminato
            - NC
            - NF
        nota_respinta:
          type: string
    Richiesta_acquisto:
      type: object
      properties:
        id:
          type: integer
        id_ordinante:
          type: integer
          description: foreign key a utente (solo ruolo utente)
        id_tecnico:
          type: integer
          description: foreign key a utente (solo ruolo tecnico)
        id_categoria:
          type: integer
          description: foreign key a categoria
        note:
          type: string
        stato_richiesta:
          type: string
          enum:
            - attesaTecnico
            - attesaOrdinante
            - concluso
            - ordinato
    Richiesta_Caratteristica:
      type: object
      description: tabella per realizzare la relazione N:N tra richiesta_acquisto e caratteristica
      properties:
        id:
          type: integer
        id_richiesta:
          type: integer
          description: foreign key a richiesta
        id_caratteristica:
          type: integer
          description: foreign key a caratteristica
        specifica:
          type: string
          description: descrive la caratteristica di un componente di una richiesta acquisto
          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: internalToken        
          
  responses:
    GeneralError:
      description: errore generale
      content:
        text/plain:
          schema:
            type: string
            example: "Messaggio di Errore"
    UnauthorizedError:
      description: bearer token mancante o non valido
    NoContentFound:
      description: Nessun contenuto trovato
    NotFound:
      description: elemento non trovato
      content:
        text/plain:
          schema:
            type: string
            example: "Elemento inesistente"